{
  "swagger" : "2.0",
  "info" : {
    "description" : "This document describes the Qualpay Platform API.",
    "version" : "1.0",
    "title" : "Qualpay Platform API",
    "contact" : {
      "name" : "Qualpay"
    },
    "license" : {
      "name" : "Apache",
      "url" : "http://apache.org"
    }
  },
  "host" : "api-test.qualpay.com",
  "basePath" : "/platform",
  "tags" : [ {
    "name" : "Customer Vault",
    "description" : "Customer Vault"
  }, {
    "name" : "Application Boarding",
    "description" : "Application"
  }, {
    "name" : "Qualpay Checkout",
    "description" : "Checkout"
  }, {
    "name" : "Reporting",
    "description" : "Reporting"
  }, {
    "name" : "Recurring Billing",
    "description" : "Recurring Billing"
  }, {
    "name" : "Embedded Fields",
    "description" : "Embedded Fields"
  }, {
    "name" : "Webhooks",
    "description" : "Webhooks"
  } ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/application/add" : {
      "post" : {
        "tags" : [ "Application Boarding" ],
        "summary" : "Create Application",
        "description" : "Creates a new merchant application, returning the new application's ID as well as the pricing options available.",
        "operationId" : "addApp",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Application Request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAppRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GetAppResult"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/application/browse" : {
      "get" : {
        "tags" : [ "Application Boarding" ],
        "summary" : "Browse applications",
        "description" : "Retrieves an array of Applications. Optional query parameters determine the page size and sorting of the data.",
        "operationId" : "browseApps",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/BrowseAppsResult"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/application/sales/browse" : {
      "get" : {
        "tags" : [ "Application Boarding" ],
        "summary" : "Browse Sales Reps",
        "description" : "Retrieves an array of Users who can be used during the creation of an application to identify the sales representitive. Optional query parameters determine the page size and sorting of the data.",
        "operationId" : "browseSalesReps",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/BrowseSalesRepsResult"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/application/{appId}/data" : {
      "post" : {
        "tags" : [ "Application Boarding" ],
        "summary" : "Save Data",
        "description" : "Saves one or more data fields to a new merchant application.",
        "operationId" : "saveData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Application Request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SaveDataRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/application/{appId}/email" : {
      "post" : {
        "tags" : [ "Application Boarding" ],
        "summary" : "Email Application",
        "description" : "Emails an application to the business contact for click-through agreement. The business_contact_email must be pre-populated before calling this service.  If present, the business_contact_name will be used to adress the recipient in the email.  An application otherwise does not have to pass validation in order to be emailed.",
        "operationId" : "emailApp",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/application/{appId}/get" : {
      "get" : {
        "tags" : [ "Application Boarding" ],
        "summary" : "Get Application",
        "description" : "Retrieve an application's details and available pricing.",
        "operationId" : "getApp",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GetAppResult"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/application/{appId}/upload" : {
      "post" : {
        "tags" : [ "Application Boarding" ],
        "summary" : "Upload Document",
        "description" : "Uploads a document relevant to this application to the provided bucket.",
        "operationId" : "uploadFile",
        "consumes" : [ "mulitpart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "The file to upload.",
          "required" : true,
          "type" : "file"
        }, {
          "in" : "body",
          "name" : "bucket",
          "description" : "The bucket to upload the file into.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "label",
          "description" : "An optional label to apply to the file.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/application/{appId}/validate" : {
      "get" : {
        "tags" : [ "Application Boarding" ],
        "summary" : "Validate Application",
        "description" : "All data fields in an application are validated, including dependencies they may have between eachother. An application can not be submitted until it passes validation.",
        "operationId" : "validateApp",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/checkout" : {
      "post" : {
        "tags" : [ "Qualpay Checkout" ],
        "summary" : "Create a checkout payment link",
        "description" : "Creates a new checkout object which contains a payment link, through which checkout payments can be made. This operation generates a unique id, checkout_id, that can be used to query the status of a Qualpay Hosted Checkout payment.",
        "operationId" : "addCheckout",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Checkout Resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckoutRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CheckoutLinkResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/checkout/{checkoutId}" : {
      "get" : {
        "tags" : [ "Qualpay Checkout" ],
        "summary" : "Lookup checkout payment",
        "description" : "This operation can be used to query the status of a payment made through Qualpay Hosted Checkout. The operation returns a checkout object which contains payment information. using the checkout link. ",
        "operationId" : "getDetails",
        "parameters" : [ {
          "name" : "checkoutId",
          "in" : "path",
          "description" : "Checkout ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CheckoutResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/embedded" : {
      "get" : {
        "tags" : [ "Embedded Fields" ],
        "summary" : "Get Transient Key",
        "description" : "Get a transient key for use with Qualpay Embedded Fields. This key will be invalidated in 30 minutes or  when a card is sucessfully verified using Embedded fields",
        "operationId" : "getEmbeddedTransientKey",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/EmbeddedKeyResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/plan" : {
      "get" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Get all Recurring Plans",
        "description" : "Gets an array of Plan objects. Optional query parameters determines, size and sort order of returned array",
        "operationId" : "browsePlans",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string",
          "default" : "plan_code"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string",
          "default" : "asc"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/RecurringPlanListResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Add a Recurring Plan",
        "description" : "Adds a new Recurring Plan. Save the generated unique plan_id, the plan_id is required to delete a plan. Read only fields in the request body will be ignored. <br><br><strong> Additional required body fields: </strong><br>plan_frequency<br>plan_code<br>plan_name<br>amt_tran<br>plan_duration",
        "operationId" : "addPlan",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Recurring Plan Object that needs to be added",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecurringPlan"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/RecurringPlanResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/plan/{plan_code}" : {
      "get" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Find Recurring Plan by Plan Code",
        "description" : "Returns an array of Recurring plans for the plan code. Search Result includes Active, Archived and Deleted plans. Optional Query parameters determines, size and sort order of returned array",
        "operationId" : "getPlan",
        "parameters" : [ {
          "name" : "plan_code",
          "in" : "path",
          "description" : "Plan Code",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string",
          "default" : "plan_code"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string",
          "default" : "asc"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/RecurringPlanListResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Update a Recurring Plan",
        "description" : "Update an active Recurring Plan. Only the fields sent in the request body will be updated. Only an active plan can be edited. If there are subscribers to this plan, then this plan will be archived and a copy of the plan with a new plan_id will be generated. All updates will be made on the new plan. Save the plan_id, the plan_id is required to delete a plan",
        "operationId" : "updatePlan",
        "parameters" : [ {
          "name" : "plan_code",
          "in" : "path",
          "description" : "Plan Code of the plan that will be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Recurring Plan Object. Send only the fields that require an update. Read only fields will be ignored",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecurringPlan"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/RecurringPlanResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/plan/{plan_code}/archive" : {
      "post" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Archive a Recurring Plan",
        "description" : "Archive a Plan. Only active plans can be archived. Plan Name should be sent in the request body.  Note that if there are subscribers to this plan, then all subscriptions related to this plan will continue to be active. No updates can be made to an archived plan. New subscribers cannot be added to a archived plan. You can always pull up information on an archived plan from the system. <br><br><strong> Additional required body fields: </strong><br>plan_name",
        "operationId" : "archivePlan",
        "parameters" : [ {
          "name" : "plan_code",
          "in" : "path",
          "description" : "Plan Code that will be archived",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Plan Name",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RecurringPlan"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/RecurringPlanResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/plan/{plan_id}/delete" : {
      "delete" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Delete a Recurring Plan",
        "description" : "Deletes a Plan. Any plan, active or not can be deleted. If there are subscribers to this plan, then all subscriptions related to this plan will be cancelled. A deleted plan cannot be updated, neither can new subscrbers  be added to a deleted plan. Even if a plan is deleted, you can query the system to get information about the deleted plan. <br><br><strong> Additional required body fields: </strong><br>plan_name",
        "operationId" : "deletePlan",
        "parameters" : [ {
          "name" : "plan_id",
          "in" : "path",
          "description" : "Plan ID that will flagged as deleted",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/RecurringPlanResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/reporting/aus/detail" : {
      "get" : {
        "tags" : [ "Reporting" ],
        "summary" : "Account Updater Detail Report",
        "description" : "Browses a paginated list of Account updater requests",
        "operationId" : "browseAusRequests",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AccountUpdaterResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/reporting/aus/summary" : {
      "get" : {
        "tags" : [ "Reporting" ],
        "summary" : "Account Updater Summary Report",
        "description" : "Browses a paginated list of account updater summary report",
        "operationId" : "browseAusSummary",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AccountUpdaterSummaryResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/reporting/batches" : {
      "get" : {
        "tags" : [ "Reporting" ],
        "summary" : "Batch Report",
        "description" : "Browses a paginated list of merchant batches. These are whole batches which have been settled from the merchant's POS device, software, or gateway.",
        "operationId" : "browseBatches",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/BatchResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/reporting/deposits" : {
      "get" : {
        "tags" : [ "Reporting" ],
        "summary" : "Deposit Report",
        "description" : "Browses a paginated list of bank deposits and withdrawls.",
        "operationId" : "browseDeposits",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DepositResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/reporting/disputes" : {
      "get" : {
        "tags" : [ "Reporting" ],
        "summary" : "Disputes Report",
        "description" : "Browses a paginated list of disputes.",
        "operationId" : "browseDisputes",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DisputeResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/reporting/transactions" : {
      "get" : {
        "tags" : [ "Reporting" ],
        "summary" : "Transaction Report",
        "description" : "Browses a paginated list of transactions. Some additional text about deposits and stuff.",
        "operationId" : "browseTrans",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TransactionResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/subscription" : {
      "get" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Get all subscriptions",
        "description" : "Gets an array of Subscription objects. Optional query parameters determines, size and sort order of returned array",
        "operationId" : "browseSubscriptions",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string",
          "default" : "date_next"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string",
          "default" : "desc"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionListResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Add a subscription",
        "description" : "Create a new subscription on the start date. Returns the subscription_id, save this id to interact with this subscription using the API. Once the subscription is added successfully, If the plan has one time set up fee,  a payment gateway request is also made to bill the customer the one time fee. Check the response in the return model to check status of the  Gateway request. Note that the subscription remains active even if the gateway request fails. A one off subscription - i.e., a subscription without a plan can be created by not sending the plan_code and sending fields applicable to one-off plans. <br><br><strong> Additional required body fields: </strong><br>amt_tran<br>customer_id<br>date_start",
        "operationId" : "addSubscription",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Subscription Request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SubscriptionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/subscription/transactions" : {
      "get" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Get all subscription transactions",
        "description" : "Gets all subscription transactions. Optional Parameters will help filter and restrict the result. ",
        "operationId" : "getAllSubscriptionTransactions",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string",
          "default" : "tran_time"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string",
          "default" : "desc"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TransactionListResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/subscription/transactions/{subscription_id}" : {
      "get" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Get transactions by subscription ID",
        "description" : "Gets all transactions for a subscription. Optional Parameters will help filter and restrict the result. ",
        "operationId" : "getSubscriptionTransactions",
        "parameters" : [ {
          "name" : "subscription_id",
          "in" : "path",
          "description" : "Subscription ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string",
          "default" : "tran_time"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string",
          "default" : "desc"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TransactionListResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/subscription/{subscription_id}" : {
      "get" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Get subscription by subscription ID",
        "description" : "Gets a Subscription object",
        "operationId" : "getSubscription",
        "parameters" : [ {
          "name" : "subscription_id",
          "in" : "path",
          "description" : "Subscription ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Update a subscription",
        "description" : "Updates the start date of an existing subscription. Only subscriptions that has not yet started can be updated. Only start date can be updated. <br><br><strong> Additional required body fields: </strong><br>date_start",
        "operationId" : "updateSubscription",
        "parameters" : [ {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Subscription Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SubscriptionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/subscription/{subscription_id}/cancel" : {
      "post" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Cancel a subscription",
        "description" : "Cancel an existing subscription. Only Active or suspended or paused subscriptions can be cancelled. Customer ID is required in the Request body.<br><br><strong> Additional required body fields: </strong><br>customer_id",
        "operationId" : "cancelSubscription",
        "parameters" : [ {
          "name" : "subscription_id",
          "in" : "path",
          "description" : "Subscription ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Customer ID",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SubscriptionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/subscription/{subscription_id}/pause" : {
      "post" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Pause a subscription",
        "description" : "Pause an active subscription. Only Active subscriptions can be paused Customer ID is required in the Request body.<br><br><strong> Additional required body fields: </strong><br>customer_id",
        "operationId" : "pauseSubscription",
        "parameters" : [ {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Customer ID",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SubscriptionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/subscription/{subscription_id}/resume" : {
      "post" : {
        "tags" : [ "Recurring Billing" ],
        "summary" : "Resume a subscription",
        "description" : "Resume a suspended or paused subscription. Customer ID is required in the Request body.<br><br><strong> Additional required body fields: </strong><br>customer_id",
        "operationId" : "resumeSubscription",
        "parameters" : [ {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Customer ID",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SubscriptionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/vault/customer" : {
      "get" : {
        "tags" : [ "Customer Vault" ],
        "summary" : "Get all customers",
        "description" : "Gets an array of Customer Vault objects. Optional query parameters determines, size and sort order of returned array",
        "operationId" : "browseCustomers",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string",
          "default" : "customer_id"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string",
          "default" : "desc"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CustomerListResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer Vault" ],
        "summary" : "Add a customer",
        "description" : "Add a Customer to Vault. All Read only fields will be ignored. <br><br><strong> Additional required body fields: </strong><br>customer_id<br>customer_first_name<br>customer_last_name",
        "operationId" : "addCustomer",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Customer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerVault"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/vault/customer/{customer_id}" : {
      "get" : {
        "tags" : [ "Customer Vault" ],
        "summary" : "Get by customer ID",
        "description" : "Gets a Customer Vault Resource By Customer ID.",
        "operationId" : "getCustomer",
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "description" : "Customer ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Customer Vault" ],
        "summary" : "Update a customer",
        "description" : "Updates a customer vault record. You can send the entire resource or only the fields that require an update. When updating array fields - billing_cards or shipping_addresses - the entire array should be included in the request body. ",
        "operationId" : "updateCustomer",
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "description" : "Customer ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Customer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerVault"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer Vault" ],
        "summary" : "Delete a customer",
        "description" : "Deletes a customer vault record. **This operation cannot be reversed.** Note that deleting a customer  will delete all the subscriptions associated with the customer.",
        "operationId" : "deleteCustomer",
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "description" : "Customer ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/vault/customer/{customer_id}/billing" : {
      "get" : {
        "tags" : [ "Customer Vault" ],
        "summary" : "Get billing cards",
        "description" : "Gets a list of Billing cards associated with the customer. The response will contain an array of billing_cards.",
        "operationId" : "getBillingCards",
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "description" : "Customer ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer Vault" ],
        "summary" : "Add a billing card",
        "description" : "Adds a Billing Card to a Customer",
        "operationId" : "addBillingCard",
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "description" : "Customer ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Customer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BillingCard"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Customer Vault" ],
        "summary" : "Update a billing card",
        "description" : "Updates a Customer's specific Billing Card based on the card_id. The complete billing record is required in the request body to update.<br><br><strong> Additional required body fields: </strong><br>card_id",
        "operationId" : "updateBillingCard",
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "description" : "Customer ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Customer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BillingCard"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/vault/customer/{customer_id}/billing/delete" : {
      "put" : {
        "tags" : [ "Customer Vault" ],
        "summary" : "Delete a billing card",
        "description" : "Deletes a Customer's specific Billing Card based on the card_id. card_id is required in the request body to delete the billing record. A billing card with active subscriptions cannot be deleted. <br><br><strong> Additional required body fields: </strong><br>card_id",
        "operationId" : "deleteBillingCard",
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "description" : "Customer ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Customer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BillingCard"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/vault/customer/{customer_id}/shipping" : {
      "get" : {
        "tags" : [ "Customer Vault" ],
        "summary" : "Get shipping addresses",
        "description" : "Gets all shipping Addresses for a customer. Response will include an array of shipping addresses. ",
        "operationId" : "getShippingAddresses",
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer Vault" ],
        "summary" : "Add a shipping address",
        "description" : "Add a shipping address to a customer.",
        "operationId" : "addShippingAddress",
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "description" : "Shipping Address",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Shipping Address",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ShippingAddress"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/webhook" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Browse webhooks",
        "description" : "Gets an array of webhook objects. Optional query parameters determines, size and sort order of returned array. Filters can be used to filter results. ",
        "operationId" : "browseWebhook",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "The number of records in the result.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int32"
        }, {
          "name" : "order_on",
          "in" : "query",
          "description" : "The field on which the results will be sorted on. Refer to the response model for available fields.",
          "required" : false,
          "type" : "string",
          "default" : "webhook_id"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "Ascending or Descending Sort order of the result.",
          "required" : false,
          "type" : "string",
          "default" : "asc"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page number, use this to choose a page when there are more results than the count parameter.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Results can be filtered by custom filter criteria. Refer to [Filter](/developer/api/reference#filters) to use the filter parameter.",
          "required" : false,
          "type" : "string",
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/WebhooksListResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Add webhook",
        "description" : "Configure a new webhook. Save the webhook_id in the response for use in future requests. Save the generated secret, the secret can be used to validate the webhook. Refer to webhook documentation for secret usage.",
        "operationId" : "addWebhook",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Webhook",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Webhook"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/WebhookResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/webhook/{webhook_id}" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Get webhook",
        "description" : "Gets a webhook.",
        "operationId" : "getWebhook",
        "parameters" : [ {
          "name" : "webhook_id",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/WebhookResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Update webhook",
        "description" : "Manage a webhook. Once created, the webhook node cannot be modified. Only the fields to be updated can be sent in the request.  When events array is included in the request, all events will be replaced with the events in the request. ",
        "operationId" : "editWebhook",
        "parameters" : [ {
          "name" : "webhook_id",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Webhook",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Webhook"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/webhook/{webhook_id}/disable" : {
      "put" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Disable a Webhook",
        "description" : "Disable a webhook. Events will not be triggered on a disabled webhook. When disabled, all active requests for this webhook will be held. If the webhook is enabled before a request expires, Qualpay will attempt to post the request again.  ",
        "operationId" : "disableWebhook",
        "parameters" : [ {
          "name" : "webhook_id",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Webhook",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QPApiData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/webhook/{webhook_id}/enable" : {
      "put" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Enable a Webhook",
        "description" : "Enable a webhook. Events are triggered and requests are posted only for active webhooks. ",
        "operationId" : "enableWebhook",
        "parameters" : [ {
          "name" : "webhook_id",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Webhook",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QPApiData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/webhook/{webhook_id}/event" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Get events",
        "description" : "Get all events for a webhook. Refer to the Webhook documentation for a list of available events. ",
        "operationId" : "getEvents",
        "parameters" : [ {
          "name" : "webhook_id",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/WebhookEventResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/webhook/{webhook_id}/event/{event}" : {
      "post" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Add an event",
        "description" : "Add an event to a webhook. Refer to the Webhook documentation for a list of available events. ",
        "operationId" : "addEvent",
        "parameters" : [ {
          "name" : "webhook_id",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "event",
          "in" : "path",
          "description" : "Event",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Webhook",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QPApiData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Delete event",
        "description" : "Delete an event from a webhook. Refer to the Webhook documentation for a list of available events.  ",
        "operationId" : "removeEvent",
        "parameters" : [ {
          "name" : "webhook_id",
          "in" : "path",
          "description" : "Webhook ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "event",
          "in" : "path",
          "description" : "Event",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "400" : {
            "description" : "Request Validation Failed",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          },
          "500" : {
            "description" : "Internal Error",
            "schema" : {
              "$ref" : "#/definitions/QPApiResponse"
            }
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "CustomerVault" : {
      "type" : "object",
      "properties" : {
        "customer_id" : {
          "type" : "string",
          "example" : "JOHNDOE",
          "description" : "Unique ID established by merchant to identify a customer. The customer ID can be used to add subscriptions \n using the Recurring Billing API or make payments using the Payment Gateway API. Once established, this ID cannot be udpated. It can contain upto 32 characters. It is case sensitive. Only letters and numbers are allowed in a Customer ID. "
        },
        "rec_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 0,
          "description" : "Unique Internal ID generated by Qualpay to identify a Vault Customer.",
          "readOnly" : true
        },
        "node_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 210000000289,
          "description" : "The Node to which the merchant belongs. For Customer record, this refers to the Qualpay supplied Merchant ID.",
          "readOnly" : true
        },
        "customer_first_name" : {
          "type" : "string",
          "example" : "JOHN",
          "description" : "Customer's First Name. Can contain upto 32 characters."
        },
        "customer_last_name" : {
          "type" : "string",
          "example" : "Doe",
          "description" : "Customer's Last Name. Can contain upto 32 characters."
        },
        "customer_phone" : {
          "type" : "string",
          "example" : "999-999-9999",
          "description" : "Customer's Phone Number. Can contain upto 16 characters."
        },
        "customer_email" : {
          "type" : "string",
          "example" : "jdoe@qualpay.com",
          "description" : "Customer's Email address. Can contain upto 64 characters."
        },
        "comments" : {
          "type" : "string",
          "example" : "Test Comment",
          "description" : "Comment"
        },
        "primary_card_number" : {
          "type" : "string",
          "example" : "411111xxxxxx1111",
          "description" : "Default Card Number for this customer. This card number is used for subscription payments. ",
          "readOnly" : true
        },
        "shipping_addresses" : {
          "type" : "array",
          "description" : "Array of shipping addresses. If this field is not an array, it is ignored. ",
          "items" : {
            "$ref" : "#/definitions/ShippingAddress"
          }
        },
        "billing_cards" : {
          "type" : "array",
          "description" : "Array of Billing Cards. If this field is not an array, it is ignored.",
          "items" : {
            "$ref" : "#/definitions/BillingCard"
          }
        }
      }
    },
    "BatchResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/BatchReport"
          }
        }
      }
    },
    "SubscriptionListResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Subscription"
          }
        }
      }
    },
    "AccountUpdaterResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/AccountUpdaterReport"
          }
        }
      }
    },
    "ApplicationModel" : {
      "type" : "object",
      "properties" : {
        "app_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Unique ID assigned by Qualpay to this application.",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant.",
          "readOnly" : true
        },
        "app_status" : {
          "type" : "string",
          "example" : "INCOMPLETE",
          "description" : "The current status of the application.",
          "readOnly" : true
        },
        "dba_name" : {
          "type" : "string",
          "example" : "Ben's Bar",
          "description" : "The 'doing business as' name, as it is currently on the merchant application.",
          "readOnly" : true
        },
        "db_timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2016-07-01 22:22:22",
          "description" : "The timestamp the application was created.",
          "readOnly" : true
        },
        "submit_timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2016-07-01 22:22:22",
          "description" : "The timestamp the application was submitted as complete.",
          "readOnly" : true
        },
        "credit_timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2016-07-01 22:22:22",
          "description" : "The timestamp the application's credit decision was made.",
          "readOnly" : true
        }
      }
    },
    "CheckoutLinkResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "data" : {
          "description" : "If request is successful, this field will contain the response resource. If there are input validation errors i.e, the  code is 2, this field may contain a list of fields that failed the validation.",
          "readOnly" : true,
          "$ref" : "#/definitions/CheckoutLink"
        }
      }
    },
    "Result" : {
      "type" : "object",
      "properties" : {
        "body" : {
          "$ref" : "#/definitions/HttpEntity"
        }
      }
    },
    "GetAppData" : {
      "type" : "object",
      "properties" : {
        "app" : {
          "description" : "The details specific to this application.",
          "$ref" : "#/definitions/ApplicationModel"
        },
        "pricing" : {
          "description" : "The pricing available to this application.",
          "$ref" : "#/definitions/PricingModel"
        }
      }
    },
    "EmbeddedKey" : {
      "type" : "object",
      "required" : [ "merchant_id" ],
      "properties" : {
        "transient_key" : {
          "type" : "string",
          "example" : "a393941797c811e6825102a019999999",
          "description" : "A single use token used for loading embedded fields. The key will be invalidated   when a card is successfully verified. The token will expire in 30 minutes. ",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant",
          "readOnly" : true
        },
        "db_timestamp" : {
          "type" : "string",
          "example" : "2016-02-21T12:57:47.000-0700",
          "description" : "This field contains the key creation time stamp. ",
          "readOnly" : true
        },
        "expiry_time" : {
          "type" : "string",
          "example" : "2016-02-21T14:37:47.000-0700",
          "description" : "This field contains the timestamp when the key will expire.",
          "readOnly" : true
        }
      }
    },
    "QPApiResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "data" : {
          "description" : "If request is successful, this field will contain the response resource. If there are input validation errors i.e, the  code is 2, this field may contain a list of fields that failed the validation.",
          "readOnly" : true,
          "$ref" : "#/definitions/QPApiData"
        }
      }
    },
    "BrowseSalesRepsData" : {
      "type" : "object",
      "required" : [ "usser_id" ],
      "properties" : {
        "user_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "user_first_name" : {
          "type" : "string",
          "example" : "Joe",
          "description" : "The user's first name.",
          "readOnly" : true
        },
        "user_last_name" : {
          "type" : "string",
          "example" : "Doe",
          "description" : "The user's last name.",
          "readOnly" : true
        },
        "user_email" : {
          "type" : "string",
          "example" : "joe@qualpay.com",
          "description" : "The user's email address.",
          "readOnly" : true
        },
        "user_login" : {
          "type" : "string",
          "example" : "joe123",
          "description" : "This user's login name to the Qualpay platform.",
          "readOnly" : true
        },
        "usser_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Unique ID assigned by Qualpay to this user.",
          "readOnly" : true
        }
      }
    },
    "Checkout" : {
      "type" : "object",
      "required" : [ "amt_tran" ],
      "properties" : {
        "checkout_id" : {
          "type" : "string",
          "example" : "a393941797c811e6825102a019999999",
          "description" : "A unique identifier that identifies a Checkout Object",
          "readOnly" : true
        },
        "checkout_link" : {
          "type" : "string",
          "example" : "https://app.qualpay.com/checkout/a393941797c811e6825102a019999999",
          "description" : "A redirect link that will direct a customer to the Qualpay payment page. This link is unique for each checkout.",
          "readOnly" : true
        },
        "db_timestamp" : {
          "type" : "string",
          "example" : "2016-02-21T12:57:47.000-0700",
          "description" : "The checkout resource creation time stamp. ",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant",
          "readOnly" : true
        },
        "expiry_time" : {
          "type" : "string",
          "example" : "2016-02-21T13:07:47.000-0700",
          "description" : "The expiration timestamp for the checkout_link. Once expired, the link cannot be used for making payments.  ",
          "readOnly" : true
        },
        "amt_tran" : {
          "type" : "number",
          "format" : "double",
          "example" : 4.56,
          "description" : "The total amount of the transaction including sales tax (if applicable)."
        },
        "amt_balance" : {
          "type" : "number",
          "format" : "double",
          "example" : 1.1,
          "description" : "Amount pending. Valid only for partial payments. If amount is paid in full, this field will be 0",
          "readOnly" : true
        },
        "tran_currency" : {
          "type" : "string",
          "example" : "840",
          "description" : "The ISO numeric currency code for the transaction.  If the profile_id field is provided, this field will be overridden by the profile’s tran_currency."
        },
        "purchase_id" : {
          "type" : "string",
          "example" : "PID#2345",
          "description" : "The purchase identifier (also referred to as the invoice number) generated by the merchant."
        },
        "profile_id" : {
          "type" : "string",
          "example" : "21200000000100000840",
          "description" : "The unique profile ID to be used in payment gateway requests if included in the request. "
        },
        "merch_ref_num" : {
          "type" : "string",
          "example" : "REF#1234",
          "description" : "Merchant provided reference value that will be stored with the transaction data and will be included with the transaction data reported in the Qualpay Manager. This value will also be attached to any lifecycle transactions (e.g. retrieval requests and chargebacks) that may occur."
        },
        "customer_first_name" : {
          "type" : "string",
          "example" : "John",
          "description" : "The customer first name. "
        },
        "customer_last_name" : {
          "type" : "string",
          "example" : "Doe",
          "description" : "The customer last name."
        },
        "customer_email" : {
          "type" : "string",
          "example" : "jdoe@qualpay.com",
          "description" : "The email address of the customer."
        },
        "customer_phone" : {
          "type" : "string",
          "example" : "999-999-9999",
          "description" : "The customer phone number."
        },
        "billing_addr1" : {
          "type" : "string",
          "example" : "123 Main Street",
          "description" : "The billing address of the cardholder."
        },
        "billing_state" : {
          "type" : "string",
          "example" : "CA",
          "description" : "The billing state of the cardholder."
        },
        "billing_city" : {
          "type" : "string",
          "example" : "San Mateo",
          "description" : "The billing city of the cardholder."
        },
        "billing_zip" : {
          "type" : "string",
          "example" : "94538",
          "description" : "The billing zip code of the cardholder."
        },
        "preferences" : {
          "description" : "Preferences included in the request",
          "$ref" : "#/definitions/CheckoutPreferences"
        },
        "transactions" : {
          "type" : "array",
          "description" : "An array of responses from Payment Gateway. Each element of the array represents a transaction for this Checkout. In addition if a notification_url is configured in preferences, the transaction object is also posted to the  URL after a checkout payment is made.",
          "items" : {
            "$ref" : "#/definitions/GatewayResponse"
          }
        }
      }
    },
    "WebhookEvent" : {
      "type" : "object",
      "required" : [ "events" ],
      "properties" : {
        "events" : {
          "type" : "array",
          "description" : "An array of events that will trigger the POST request. Refer to Webhooks documentation for a list of available events.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "SubscriptionResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "data" : {
          "description" : "If request is successful, this field will contain the response resource. If there are input validation errors i.e, the  code is 2, this field may contain a list of fields that failed the validation.",
          "readOnly" : true,
          "$ref" : "#/definitions/Subscription"
        }
      }
    },
    "Subscription" : {
      "type" : "object",
      "properties" : {
        "subscription_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1111,
          "description" : "Qualpay generated ID that identifies a subscription",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay for a Merchant",
          "readOnly" : true
        },
        "customer_id" : {
          "type" : "string",
          "example" : "QPCUSTOMER",
          "description" : "Unique ID that identifies a customer",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "example" : "A",
          "description" : " Status of the subscription. Following are descriptions of the statuses\n             <ul>\n             <li>A - Active</li>\n             <li>D - Complete</li>\n             <li>P - Paused</li>\n             <li>C - Cancelled</li>\n             <li>S - Suspended</li>\n             </ul>",
          "readOnly" : true,
          "enum" : [ "A", "D", "P", "C", "S" ]
        },
        "profile_id" : {
          "type" : "string",
          "example" : "21200000000100840",
          "description" : "The unique profile ID to be used in payment gateway requests.",
          "readOnly" : true
        },
        "plan_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1345,
          "description" : "Qualpay generated ID that identifies a Recurring Plan",
          "readOnly" : true
        },
        "plan_name" : {
          "type" : "string",
          "example" : "Qualpay Plan",
          "description" : "A Name assigned by Merchant to a plan. Name should be unique for a merchant",
          "readOnly" : true
        },
        "plan_code" : {
          "type" : "string",
          "example" : "SKU1234",
          "description" : "A Code assigned by Merchant to a plan. Should be Unique",
          "readOnly" : true
        },
        "customer_first_name" : {
          "type" : "string",
          "example" : "John",
          "description" : "First name of the Plan subscriber",
          "readOnly" : true
        },
        "customer_last_name" : {
          "type" : "string",
          "example" : "Doe",
          "description" : "Last name of the Plan subscriber",
          "readOnly" : true
        },
        "date_start" : {
          "type" : "string",
          "example" : "2016-07-14",
          "description" : "Start Date of subscription. When adding a subscription, the start date should be in future. ",
          "readOnly" : true
        },
        "date_next" : {
          "type" : "string",
          "example" : "2016-07-21",
          "description" : "Next Billing date of subscription. This field will be empty for cancelled and completed subscriptions.",
          "readOnly" : true
        },
        "date_end" : {
          "type" : "string",
          "example" : "2016-09-21",
          "description" : "Date when the subscription will end. ",
          "readOnly" : true
        },
        "amt_setup" : {
          "type" : "number",
          "example" : 50.0,
          "description" : "One-Time Fee amount. This fee will be charged when a subscription is added.",
          "readOnly" : true
        },
        "prorate_date_start" : {
          "type" : "string",
          "example" : "2016-07-14",
          "description" : "If first payment is prorated, the date the customer will be billed the prorate amount. ",
          "readOnly" : true
        },
        "prorate_amt" : {
          "type" : "number",
          "example" : 11.13,
          "description" : "If first payment is prorated, the Prorate amount",
          "readOnly" : true
        },
        "trial_date_start" : {
          "type" : "string",
          "example" : "2016-07-20",
          "description" : "If there is a trial period, the start date of the trial period.",
          "readOnly" : true
        },
        "trial_date_end" : {
          "type" : "string",
          "example" : "2016-07-20",
          "description" : "If there is a trial period, the end date of the trial period",
          "readOnly" : true
        },
        "trial_amt" : {
          "type" : "number",
          "example" : 10.45,
          "description" : "If there is a trial period, the amount billed during the trial period. Should be a positive amount. ",
          "readOnly" : true
        },
        "recur_date_start" : {
          "type" : "string",
          "example" : "2016-07-30",
          "description" : "Date Regular billing cycle will start.",
          "readOnly" : true
        },
        "recur_date_end" : {
          "type" : "string",
          "example" : "2016-12-30",
          "description" : "Date Regular billing cycle will end. ",
          "readOnly" : true
        },
        "recur_amt" : {
          "type" : "number",
          "example" : 25.99,
          "description" : "Regular Billing Amount. Amount should be a positive amount.",
          "readOnly" : true
        },
        "response" : {
          "description" : "Response from Gateway for one time set up fee transactions. Valid only when adding subscriptions with one time fee. ",
          "readOnly" : true,
          "$ref" : "#/definitions/GatewayResponse"
        },
        "tran_currency" : {
          "type" : "string",
          "example" : "840",
          "description" : "This field contains the ISO numeric currency code for the transaction.",
          "readOnly" : true
        },
        "plan_desc" : {
          "type" : "string",
          "example" : "ABC Monthly Billing Plan",
          "description" : "A short description of the  plan, can be one off plan.",
          "readOnly" : true
        },
        "plan_frequency" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "This field identifies the frequency of billing. Use one of the following codes for frequency. <ul>\n     <li>0 - Weekly</li>\n     <li>1 - Bi-Weekly</li>\n     <li>3 - Monthly</li>\n     <li>4 - Quarterly</li>\n     <li>5 - BiAnnually</li>\n     <li>6 - Annually</li>\n  </ul>",
          "readOnly" : true,
          "enum" : [ 0, 1, 3, 4, 5, 6 ]
        },
        "plan_duration" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : " Number of billing cycles in the recurring transaction, -1 indicates bill until cancelled",
          "readOnly" : true
        },
        "interval" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : " Applicable only for monthly frequency. Number of months in a subscription cycle.",
          "readOnly" : true
        },
        "subscription_on_plan" : {
          "type" : "boolean",
          "example" : false,
          "description" : "True for subscriptions associated with a plan. False for one off subscriptions",
          "readOnly" : true,
          "default" : false
        }
      }
    },
    "GetAppResult" : {
      "type" : "object",
      "required" : [ "code", "data", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "data" : {
          "description" : "If request is successful, this field will contain the response resource. If there are input validation errors i.e, the  code is 2, this field may contain a list of fields that failed the validation.",
          "readOnly" : true,
          "$ref" : "#/definitions/GetAppData"
        }
      }
    },
    "AccountUpdaterReport" : {
      "type" : "object",
      "properties" : {
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant.",
          "readOnly" : true
        },
        "request_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 112,
          "description" : "Unique ID assigned by Qualpay to the account updater request.",
          "readOnly" : true
        },
        "request_date" : {
          "type" : "string",
          "example" : "2017-05-06",
          "description" : "Account updater request date in YYYY-MM-DD format. Date when a harvest request was sent to the account updater service.",
          "readOnly" : true
        },
        "response_date" : {
          "type" : "string",
          "example" : "2017-05-09",
          "description" : "Account updater response date in YYYY-MM-DD format. Date when the account updater service responded. This field is empty if the response is not yet received.",
          "readOnly" : true
        },
        "card_id" : {
          "type" : "string",
          "example" : "86e1b00d9b0811e68df3069d8f743581",
          "description" : "Card ID received from a tokenization request for a card. The card_id may be used in place of a card number in messages requiring cardholder account data.",
          "readOnly" : true
        },
        "card_number" : {
          "type" : "string",
          "example" : "411111xxxxxx1111",
          "description" : "Cardholder card number(masked).",
          "readOnly" : true
        },
        "exp_date" : {
          "type" : "string",
          "example" : "0415",
          "description" : "Card Expiration Date in MMYY format.",
          "readOnly" : true
        },
        "card_number_new" : {
          "type" : "string",
          "example" : "424242xxxxxx4242",
          "description" : "Updated cardholder card number(masked). This field will be empty if there are no updates to the card number.",
          "readOnly" : true
        },
        "exp_date_new" : {
          "type" : "string",
          "example" : "0419",
          "description" : "Updated card expiration date in MMYY format. This field will be empty if there are no updates to the expiration date.",
          "readOnly" : true
        },
        "reason_code" : {
          "type" : "string",
          "example" : "200",
          "description" : "Account updater reason code.  Account updater reason code. Following are descriptions of the codes\n             <ul>\n             <li>000 - New Card/No response</li>\n             <li>200 - Valid account no update</li>\n             <li>201 - Account Expiration Date Updated</li>\n             <li>202 - Account Number Updated</li>\n             <li>203 - Account is Closed</li>\n             <li>204 - Contact Cardholder</li>\n             <li>206 - No Match</li>\n             <li>315 - Invalid Expiration Date</li>\n             <li>320 - Invalid Account Number</li>\n             <li>329 - Invalid Card Type</li>\n             </ul>",
          "readOnly" : true,
          "enum" : [ "000", "200", "201", "202", "203", "204", "206", "315", "320", "329" ]
        },
        "billable" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Merchants will be billed only for matches. Reason codes 201, 202, 203 and 204 are billable.",
          "readOnly" : true,
          "default" : false
        }
      }
    },
    "TransactionListResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Transaction"
          }
        }
      }
    },
    "PlanModel" : {
      "type" : "object"
    },
    "DisputeReport" : {
      "type" : "object",
      "required" : [ "amt_dispute", "amt_tran", "auth_avs_result", "auth_code", "auth_cvv2_result", "batch_id", "card_number", "card_number_original", "card_type", "data_type", "dba_name", "incoming_date", "merch_ref_num", "merchant_id", "pg_id", "purchase_id", "reason_code", "rec_id", "rec_id_linked", "tran_currency", "tran_date" ],
      "properties" : {
        "rec_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Unique ID assigned by Qualpay to this deposit.",
          "readOnly" : true
        },
        "data_type" : {
          "type" : "string",
          "example" : "C",
          "description" : "The type of dispute. For all types, please see <a href=\"/developer/api/reference#data_type\" target=\"_blank\">Dispute Types</a>.",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant.",
          "readOnly" : true
        },
        "incoming_date" : {
          "type" : "string",
          "example" : "2016-07-01",
          "description" : "The date Qualpay recieved the dispute from the card issuer.",
          "readOnly" : true
        },
        "dba_name" : {
          "type" : "string",
          "example" : "Qualpay",
          "description" : "The doing business as name of the merchant.",
          "readOnly" : true
        },
        "batch_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Unique ID assigned by Qualpay to this batch.",
          "readOnly" : true
        },
        "card_number" : {
          "type" : "string",
          "example" : "401288xxxxxx8882",
          "description" : "The truncated card number of the dispute.",
          "readOnly" : true
        },
        "card_type" : {
          "type" : "string",
          "example" : "VS",
          "description" : "The card brand of this dispute.",
          "readOnly" : true,
          "enum" : [ "VS", "MC", "DS", "AM" ]
        },
        "tran_date" : {
          "type" : "string",
          "example" : "2016-07-01",
          "description" : "The date the initial transaction occured on.",
          "readOnly" : true
        },
        "amt_tran" : {
          "type" : "string",
          "example" : "1.00",
          "description" : "The amount of the original settled transaction.",
          "readOnly" : true
        },
        "amt_dispute" : {
          "type" : "string",
          "example" : "1.00",
          "description" : "The amount of the dispute: equal to, or less than the amt_tran (when in USD).",
          "readOnly" : true
        },
        "tran_currency" : {
          "type" : "string",
          "example" : "840",
          "description" : "The ISO 4217 numeric currency code of the dispute.",
          "readOnly" : true
        },
        "purchase_id" : {
          "type" : "string",
          "example" : "1234567890",
          "description" : "A merchant supplied tracking number, generally an invoice or purchase number. This number may be visible to the cardholder, depending on card issuer.",
          "readOnly" : true
        },
        "merch_ref_num" : {
          "type" : "string",
          "example" : "1234567890",
          "description" : "A merchant supplied tracking number which is stored by Qualpay, and does not pass to the card issuer.",
          "readOnly" : true
        },
        "pg_id" : {
          "type" : "string",
          "example" : "7ea0ff0c9ba411e594f6063a1e626c0f",
          "description" : "If the transaction originated through the Qualpay Virtual Terminal, or Qualpay Payment Gateway, this is the tracking ID returned in the gateway response.",
          "readOnly" : true
        },
        "auth_code" : {
          "type" : "string",
          "example" : "123456",
          "description" : "The authorization code provided by the card issuer when the card was approved.",
          "readOnly" : true
        },
        "reason_code" : {
          "type" : "string",
          "example" : "0083",
          "description" : "The card association reason why the dispute was issued.",
          "readOnly" : true
        },
        "rec_id_linked" : {
          "type" : "string",
          "example" : "TODO",
          "description" : "TODO",
          "readOnly" : true
        },
        "auth_avs_result" : {
          "type" : "string",
          "example" : "M",
          "description" : "The AVS (address validation service) match code of the original transaction.",
          "readOnly" : true
        },
        "auth_cvv2_result" : {
          "type" : "string",
          "example" : "M",
          "description" : "The CVV2 match code of the original transaction.",
          "readOnly" : true
        },
        "card_number_original" : {
          "type" : "string",
          "example" : "401288xxxxxx8882",
          "description" : "The truncated card number of the original captured transactions. In some rare cases a dispute may be issued on a different card than the original. This can occur when, for example, the card was was re-issued between the transaction date, and the dispute date.",
          "readOnly" : true
        }
      }
    },
    "AccountUpdaterSummaryResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/AccountUpdaterSummaryReport"
          }
        }
      }
    },
    "WebhookResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "data" : {
          "description" : "If request is successful, this field will contain the response resource. If there are input validation errors i.e, the  code is 2, this field may contain a list of fields that failed the validation.",
          "readOnly" : true,
          "$ref" : "#/definitions/Webhook"
        }
      }
    },
    "BrowseSalesRepsResult" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/BrowseSalesRepsData"
          }
        }
      }
    },
    "AddAppRequest" : {
      "type" : "object",
      "required" : [ "channel_id", "sales_rep" ],
      "properties" : {
        "channel_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "The sales channel to start this application in. The channel ID is provided to you by Qualpay."
        },
        "sales_rep" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "The sales rep and contact for this application in. This is the qualpay ID for the sales rep user. The service at sales/browse can assist in finding the user_id."
        }
      }
    },
    "Transaction" : {
      "type" : "object",
      "properties" : {
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant",
          "readOnly" : true
        },
        "tran_time" : {
          "type" : "string",
          "example" : "2016-07-01 00:00:03",
          "description" : "Transaction Time in YYYY-MM-DD HH:MM:ss. All Times are Pacific Time. ",
          "readOnly" : true
        },
        "tran_status" : {
          "type" : "string",
          "example" : "C",
          "description" : "Transaction Status<ul><li>A - Transaction is approved</li><li>H - Transaction Held</li><li>C - Transaction is captured</li><li>V - Transaction is voided by Merchant</li><li>v - Transaction is voided by System</li><li>K - Transaction is cancelled</li><li>D - Transaction is declined by issuer</li><li>F - Transaction failures other than Issuer Declines</li><li>S - Transaction Settled</li><li>P - Deposit Sent</li><li>N - Transaction Settled, but will not be funded by Qualpay</li><li>R - Transaction Rejected</li></ul>",
          "readOnly" : true
        },
        "auth_code" : {
          "type" : "string",
          "example" : "T12345",
          "description" : "Authorization Code from Issuer",
          "readOnly" : true
        },
        "rcode" : {
          "type" : "string",
          "example" : "000",
          "description" : "Gateway Response Code. Refer to <a href=\"/developer/api/reference#gateway-response-codes\"target=\"_blank\">Payment Gateway Response Codes</a> for Gateway Response Codes",
          "readOnly" : true
        },
        "card_number" : {
          "type" : "string",
          "example" : "488888xxxxxx8887",
          "description" : "Masked Card Number. ",
          "readOnly" : true
        },
        "card_type" : {
          "type" : "string",
          "example" : "VS",
          "description" : "Card Type. The card type is derived from the card number. Refer to <a href=\"/developer/api/reference#card-types\"target=\"_blank\">Card Types</a> for a list of card types. ",
          "readOnly" : true,
          "enum" : [ "VS", "MC", "AM", "DS" ]
        },
        "purchase_id" : {
          "type" : "string",
          "example" : "QP12345",
          "description" : "Purchase ID of the transaction",
          "readOnly" : true
        },
        "pg_id" : {
          "type" : "string",
          "example" : "c0a3bead4a5911e6807e0a728c0d49c0",
          "description" : "Qualpay generated Payment gateway ID of the transaction",
          "readOnly" : true
        },
        "cardholder_first_name" : {
          "type" : "string",
          "example" : "John",
          "description" : "First name of Card holder",
          "readOnly" : true
        },
        "cardholder_last_name" : {
          "type" : "string",
          "example" : "Doe",
          "description" : "Last name of Card holder",
          "readOnly" : true
        },
        "amt_tran" : {
          "type" : "number",
          "format" : "double",
          "example" : 10.99,
          "description" : "Transaction Amount",
          "readOnly" : true
        },
        "tran_currency" : {
          "type" : "string",
          "example" : "840",
          "description" : "Numeric Currency Code. Refer to <a href=\"/developer/api/reference#currency-codes\"target=\"_blank\">Currency Codes</a> for a list of currency codes. "
        },
        "dispute_flag" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Will be set to true if the transaction is disputed.",
          "readOnly" : true,
          "default" : false
        },
        "amt_refunded" : {
          "type" : "number",
          "format" : "double",
          "example" : 0.0,
          "description" : "Amount refunded if there are any refunds",
          "readOnly" : true
        },
        "batch_number" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 2,
          "description" : "Settlement Batch Number",
          "readOnly" : true
        },
        "dba_name" : {
          "type" : "string",
          "example" : "Qualpay",
          "description" : "DBA name used in the transaction",
          "readOnly" : true
        },
        "customer_id" : {
          "type" : "string",
          "example" : "JOHNDOE",
          "description" : "Customer Vault ID",
          "readOnly" : true
        },
        "subscription_id" : {
          "type" : "string",
          "example" : "1111",
          "description" : "Subscription Identifier",
          "readOnly" : true
        },
        "merch_ref_num" : {
          "type" : "string",
          "example" : "Ref#1234",
          "description" : "Merchant provided reference number for this transaction",
          "readOnly" : true
        }
      }
    },
    "DepositReport" : {
      "type" : "object",
      "required" : [ "ach_description", "amt_ach", "dba_name", "merchant_id", "post_date_actual", "rec_id", "reference_number" ],
      "properties" : {
        "rec_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Unique ID assigned by Qualpay to this deposit.",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant.",
          "readOnly" : true
        },
        "dba_name" : {
          "type" : "string",
          "example" : "Qualpay",
          "description" : "The doing business as name of the merchant.",
          "readOnly" : true
        },
        "reference_number" : {
          "type" : "string",
          "example" : "123456",
          "description" : "The bank reference number of the deposit.",
          "readOnly" : true
        },
        "amt_ach" : {
          "type" : "string",
          "example" : "100.00",
          "description" : "ACH Amount",
          "readOnly" : true
        },
        "ach_description" : {
          "type" : "string",
          "example" : "MERCH DEP",
          "description" : "ACH Amount",
          "readOnly" : true
        },
        "post_date_actual" : {
          "type" : "string",
          "example" : "2016-07-01",
          "description" : "The date the ACH posted to the Federal Reserve. ",
          "readOnly" : true
        }
      }
    },
    "RecurringPlanListResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/RecurringPlan"
          }
        }
      }
    },
    "DisputeResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/DisputeReport"
          }
        }
      }
    },
    "RecurringPlanResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "data" : {
          "description" : "If request is successful, this field will contain the response resource. If there are input validation errors i.e, the  code is 2, this field may contain a list of fields that failed the validation.",
          "readOnly" : true,
          "$ref" : "#/definitions/RecurringPlan"
        }
      }
    },
    "WebhooksListResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Webhook"
          }
        }
      }
    },
    "CheckoutPreferences" : {
      "type" : "object",
      "properties" : {
        "success_url" : {
          "type" : "string",
          "example" : "https://www.qualpay.com/",
          "description" : "A URL to which the customer will be directed after a successful payment. If not defined in the API or within the Checkout Settings, the customer will be directed to the default Qualpay receipt page. Must be formatted as http://www.domain.com/ or https://www.domain.com/. "
        },
        "failure_url" : {
          "type" : "string",
          "example" : "https://www.qualpay.com/",
          "description" : "A URL to which the customer will be directed after a failed transaction. If not defined in the API or within the Checkout Settings, the customer will be directed to the  default Qualpay receipt page. Must be formatted as http://www.domain.com/ or https://www.domain.com/. "
        },
        "notification_url" : {
          "type" : "string",
          "example" : "https://www.qualpay.com/",
          "description" : "A merchant provided URL that will be notified whenever a hosted checkout payment is made. Qualpay will send a Post message to the URI. "
        },
        "allow_partial_payments" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If set to true, the customer can make changes to the transaction amount.",
          "default" : false
        },
        "email_receipt" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If set to true and the customer email address is provided, a receipt is sent to the customer",
          "default" : false
        },
        "request_type" : {
          "type" : "string",
          "example" : "sale",
          "description" : "Identifies the type of request when the customer submits the payment data on the checkout page.  ",
          "enum" : [ "auth", "sale" ]
        },
        "expire_in_secs" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 6000,
          "description" : "The time period for which the checkout_link will be valid in seconds. The minimum value for this field is 900 seconds  (5 minutes),  the maximum value is 7776000 (90 days)"
        }
      }
    },
    "CustomerResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "data" : {
          "description" : "If request is successful, this field will contain the response resource. If there are input validation errors i.e, the  code is 2, this field may contain a list of fields that failed the validation.",
          "readOnly" : true,
          "$ref" : "#/definitions/CustomerVault"
        }
      }
    },
    "SaveDataRequest" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "description" : "An array of data fields to save to the application.",
          "items" : {
            "$ref" : "#/definitions/ApplicationData"
          }
        }
      }
    },
    "RecurringPlan" : {
      "type" : "object",
      "properties" : {
        "plan_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 0,
          "description" : "Unique ID generated by Qualpay for a Plan",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Qualpay assigned ID to identify a Merchant",
          "readOnly" : true
        },
        "plan_code" : {
          "type" : "string",
          "example" : "SKU1234",
          "description" : "A code assigned by merchant to a plan. Should be Unique. Plan Code cannot exceed 16 characters in length. "
        },
        "plan_name" : {
          "type" : "string",
          "example" : "ABCPlan",
          "description" : "A name assigned by merchant to a plan. Should be unique. Plan Name cannot exceed 64 characters in length. "
        },
        "plan_desc" : {
          "type" : "string",
          "example" : "ABC Monthly Billing Plan",
          "description" : "A short description of the plan"
        },
        "plan_frequency" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "This field identifies the frequency of billing. Use one of the following codes for frequency. <ul>\n     <li>0 - Weekly</li>\n     <li>1 - Bi-Weekly</li>\n     <li>3 - Monthly</li>\n     <li>4 - Quarterly</li>\n     <li>5 - BiAnnually</li>\n     <li>6 - Annually</li>\n  </ul>",
          "enum" : [ 0, 1, 3, 4, 5, 6 ]
        },
        "interval" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Applicable only for monthly frequency. Number of months in a subscription cycle."
        },
        "plan_duration" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Number of billing cycles in the recurring transaction, Use -1 if billing cycles are indefinite"
        },
        "status" : {
          "type" : "string",
          "example" : "E",
          "description" : "Status of a Plan. Allowable values are as follows: <ul><li>E - Active</li><li>A - Archived</li><li>D - Deleted</li></ul>",
          "readOnly" : true,
          "enum" : [ "E", "A", "D" ]
        },
        "trial_duration" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Number of billing cycles when the subscription will be in trial period"
        },
        "amt_trial" : {
          "type" : "number",
          "format" : "double",
          "example" : 9.99,
          "description" : "Amount to be billed during the trial period"
        },
        "amt_setup" : {
          "type" : "number",
          "format" : "double",
          "example" : 50.0,
          "description" : "One-Time Fee amount. This fee will be charged when a subscription is added."
        },
        "amt_tran" : {
          "type" : "number",
          "format" : "double",
          "example" : 19.99,
          "description" : "Plan Transaction Amount. Amount that will be billed each cycle period"
        },
        "tran_currency" : {
          "type" : "string",
          "example" : "840",
          "description" : "Numeric Currency Code. If Profile_id is provded, the currency is determined from profile. Default is 840 - USD. Refer to <a href=\"/developer/api/reference#currency-codes\"target=\"_blank\">Currency Codes</a> for a list of currency codes. "
        },
        "profile_id" : {
          "type" : "string",
          "example" : "21200000000100000840",
          "description" : "Payment Gateway Profile id that will be used when billing transactions. tran_currency will be used if profile_id is not provided.If both tran_currency and profile_id is not provided, default USD profile is used"
        },
        "bill_specific_day" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If set to true, customer will be billed on a specific start day",
          "default" : false
        },
        "day_of_week" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "This field represents the day of the week on which the system will be billed for weekly or biweekly plans.Applicable only if billing on specific days , i.e., bill_specific_day is true. <ul><li>1 - Sunday</li><li>2 - Monday</li><li>3 - Tuesday</li><li>4 - Wednesday</li><li>5 - Thursday</li><li>6 - Friday</li><li>7 - Saturday</li></ul>"
        },
        "day_of_month" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Applicable only if billing on specific days , i.e., bill_specific_day is true. Day of the month on which the system will be billed for month or year based plans. Use 1-31 to represent the day of month when the customerwill be billed or 32 if billing should be on the last day of month "
        },
        "month" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Month on which the system will be billed for month or year based plans. Applicable only if billing on specific days , i.e., bill_specific_day is true.<ul><li>1 - January</li><li>2 - February</li><li>3 - March</li><li>4 - April</li><li>5 - May</li><li>6 - June</li><li>7 - July</li><li>8 - August</li><li>9 - September</li><li>10 - October</li><li>11 - November</li><li>12 - December</li></ul>"
        },
        "prorate_first_pmt" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Set this flag to true if first payment should be prorated. Applicable only when billing is on specific days , i.e., bill_specific_day flag is set to true.",
          "default" : false
        },
        "amt_prorate" : {
          "type" : "number",
          "format" : "double",
          "example" : 10.0,
          "description" : "Fixed prorate amount for first payment. This field is applicable only if prorate_first_pmt is set to true.  If set to zero or undefined, the system will calculate the prorate amount.  "
        },
        "db_timestamp" : {
          "type" : "string",
          "example" : "2016-07-10 09:55:30",
          "description" : "Date/time the plan was created in YYYY-MM-DD hh:mm:ss format",
          "readOnly" : true
        },
        "mod_timestamp" : {
          "type" : "string",
          "example" : "2016-07-19 21:15:39",
          "description" : "Date/time the plan was last modified in YYYY-MM-DD hh:mm:ss format",
          "readOnly" : true
        }
      }
    },
    "HttpEntity" : {
      "type" : "object",
      "properties" : {
        "knownEmpty" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "QPApiData" : {
      "type" : "object"
    },
    "CustomerListResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/CustomerVault"
          }
        }
      }
    },
    "ApplicationData" : {
      "type" : "object",
      "required" : [ "key", "value" ],
      "properties" : {
        "key" : {
          "type" : "string",
          "example" : "business_name",
          "description" : "The key for the data you wish to save."
        },
        "value" : {
          "type" : "string",
          "example" : "Ben's Long Beach",
          "description" : "The value you wish to save to the application, for it's key."
        }
      }
    },
    "TransactionReport" : {
      "type" : "object",
      "required" : [ "amt_auth", "amt_funded", "amt_tran", "auth_code", "auth_date", "batch_date", "batch_id", "batch_number", "card_number", "card_type", "dba_name", "funded_currency", "merch_city_ph", "merch_country", "merch_state", "merch_zip", "merchant_id", "moto_ecomm_ind", "pos_entry_mode", "purchase_id", "rec_id", "reference_number", "settle_date", "tran_currency", "tran_date" ],
      "properties" : {
        "rec_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Unique ID assigned by Qualpay to this deposit.",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant.",
          "readOnly" : true
        },
        "batch_date" : {
          "type" : "string",
          "example" : "2016-07-01",
          "description" : "The date the batch was settled to Qualpay.",
          "readOnly" : true
        },
        "dba_name" : {
          "type" : "string",
          "example" : "Qualpay",
          "description" : "The doing business as name of the merchant.",
          "readOnly" : true
        },
        "merch_city_ph" : {
          "type" : "string",
          "example" : "555-555-5555",
          "description" : "Sent to the card issuer; either the merchant's city, or phone number.",
          "readOnly" : true
        },
        "merch_state" : {
          "type" : "string",
          "example" : "CA",
          "description" : "Sent to the card issuer; the merchant's state.",
          "readOnly" : true
        },
        "merch_zip" : {
          "type" : "string",
          "example" : "55555",
          "description" : "Sent to the card issuer; the merchant's ZIP code.",
          "readOnly" : true
        },
        "merch_country" : {
          "type" : "string",
          "example" : "US",
          "description" : "Sent to the card issuer; the merchant's country code.",
          "readOnly" : true
        },
        "batch_number" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "A non-unique ID assigned by the merchant's terminal, POS device, or gateway for this batch, in the range of 1 - 999.",
          "readOnly" : true
        },
        "batch_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Unique ID assigned by Qualpay to this batch.",
          "readOnly" : true
        },
        "card_number" : {
          "type" : "string",
          "example" : "401288xxxxxx8882",
          "description" : "The truncated card number of the transaction.",
          "readOnly" : true
        },
        "card_type" : {
          "type" : "string",
          "example" : "VS",
          "description" : "The card brand of this transaction.",
          "readOnly" : true,
          "enum" : [ "VS", "MC", "DS", "AM" ]
        },
        "auth_date" : {
          "type" : "string",
          "example" : "2016-07-01",
          "description" : "The date the transaction was authorized by the merchant.",
          "readOnly" : true
        },
        "tran_date" : {
          "type" : "string",
          "example" : "2016-07-01",
          "description" : "The date the transaction was captured by the merchant.",
          "readOnly" : true
        },
        "settle_date" : {
          "type" : "string",
          "example" : "2016-07-01",
          "description" : "The date Qualpay settled the transaction with the issuer.",
          "readOnly" : true
        },
        "amt_auth" : {
          "type" : "string",
          "example" : "1.00",
          "description" : "The amount of the original authorization.",
          "readOnly" : true
        },
        "amt_tran" : {
          "type" : "string",
          "example" : "1.00",
          "description" : "The amount of the settled transaction.",
          "readOnly" : true
        },
        "tran_currency" : {
          "type" : "string",
          "example" : "840",
          "description" : "The ISO 4217 numeric currency code of the dispute.",
          "readOnly" : true
        },
        "reference_number" : {
          "type" : "string",
          "example" : "123456",
          "description" : "The bank reference number of the deposit.",
          "readOnly" : true
        },
        "purchase_id" : {
          "type" : "string",
          "example" : "1234567890",
          "description" : "A merchant supplied tracking number, generally an invoice or purchase number. This number may be visible to the cardholder, depending on card issuer.",
          "readOnly" : true
        },
        "auth_code" : {
          "type" : "string",
          "example" : "123456",
          "description" : "The authorization code provided by the card issuer when the card was approved.",
          "readOnly" : true
        },
        "moto_ecomm_ind" : {
          "type" : "string",
          "example" : "7",
          "description" : "The transaction ECI (e-commerce indicator), an indicatior of how the card was processed.",
          "readOnly" : true
        },
        "pos_entry_mode" : {
          "type" : "string",
          "example" : "90",
          "description" : "Indicates the way a card number was entered. For all codes, please see <a href=\"/developer/api/reference#pos_entry_mode\" target=\"_blank\">POS Entry Modes</a>.",
          "readOnly" : true
        },
        "amt_funded" : {
          "type" : "string",
          "example" : "100.00",
          "description" : "The amount of this transaction funded to the merchant (in the funded currency).",
          "readOnly" : true
        },
        "funded_currency" : {
          "type" : "string",
          "example" : "840",
          "description" : "The ISO 4217 numeric currency code of the transaction.",
          "readOnly" : true
        }
      }
    },
    "PricingModel" : {
      "type" : "object",
      "properties" : {
        "pricing_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Unique ID assigned by Qualpay to this pricing plan.",
          "readOnly" : true
        },
        "plan" : {
          "description" : "The pricing plan object.",
          "readOnly" : true,
          "$ref" : "#/definitions/PlanModel"
        }
      }
    },
    "CheckoutResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "data" : {
          "description" : "If request is successful, this field will contain the response resource. If there are input validation errors i.e, the  code is 2, this field may contain a list of fields that failed the validation.",
          "readOnly" : true,
          "$ref" : "#/definitions/Checkout"
        }
      }
    },
    "DepositResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/DepositReport"
          }
        }
      }
    },
    "BrowseAppsData" : {
      "type" : "object",
      "required" : [ "app_id", "app_status", "credit_timestamp", "db_timestamp", "dba_name", "merchant_id", "submit_timestamp" ],
      "properties" : {
        "app_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Unique ID assigned by Qualpay to this application.",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant.",
          "readOnly" : true
        },
        "app_status" : {
          "type" : "string",
          "example" : "INCOMPLETE",
          "description" : "The current status of the application.",
          "readOnly" : true
        },
        "dba_name" : {
          "type" : "string",
          "example" : "Ben's Bar",
          "description" : "The 'doing business as' name, as it is currently on the merchant application.",
          "readOnly" : true
        },
        "db_timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2016-07-01 22:22:22",
          "description" : "The timestamp the application was created.",
          "readOnly" : true
        },
        "submit_timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2016-07-01 22:22:22",
          "description" : "The timestamp the application was submitted as complete.",
          "readOnly" : true
        },
        "credit_timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2016-07-01 22:22:22",
          "description" : "The timestamp the application's credit decision was made.",
          "readOnly" : true
        }
      }
    },
    "SubscriptionRequest" : {
      "type" : "object",
      "properties" : {
        "date_start" : {
          "type" : "string",
          "example" : "2016-07-14",
          "description" : "Date Subscription will start"
        },
        "customer_id" : {
          "type" : "string",
          "example" : "JOHNDOE",
          "description" : "Customer ID of the Subscriber. Customer ID should be a valid customer from theCustomer Vault"
        },
        "plan_code" : {
          "type" : "string",
          "example" : "1234",
          "description" : "Plan code of the Recurring Plan. Plan should be an active, valid recurring plan. Required only if subscription is on a plan. Do not define this field if adding a subscription with a one-off plan."
        },
        "plan_desc" : {
          "type" : "string",
          "example" : "ABC Monthly Billing Plan",
          "description" : "Applicable only to one-off subscriptions. A short description of the one off plan."
        },
        "plan_frequency" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Applicable only to one-off subscriptions. Required for one-off subscriptions. This field identifies the frequency of billing. Use one of the following codes for frequency. <ul>\n     <li>0 - Weekly</li>\n     <li>1 - Bi-Weekly</li>\n     <li>3 - Monthly</li>\n     <li>4 - Quarterly</li>\n     <li>5 - BiAnnually</li>\n     <li>6 - Annually</li>\n  </ul>",
          "enum" : [ 0, 1, 3, 4, 5, 6 ]
        },
        "interval" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Applicable only to one-off subscriptions. Applicable only for monthly frequency. Number of months in a subscription cycle."
        },
        "plan_duration" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Applicable only to one-off subscriptions. Required for one-off subscriptions. Number of billing cycles in the recurring transaction, Use -1 if billing cycles are indefinite"
        },
        "amt_setup" : {
          "type" : "number",
          "format" : "double",
          "example" : 50.0,
          "description" : "Applicable only to one-off subscriptions. One-Time Fee amount. This fee will be charged when a subscription is added."
        },
        "amt_tran" : {
          "type" : "number",
          "format" : "double",
          "example" : 19.99,
          "description" : "Applicable only to one-off subscriptions. Required for one-off subscriptions. Plan Transaction Amount. Amount that will be billed each cycle period"
        },
        "profile_id" : {
          "type" : "string",
          "example" : "21200000000100000840",
          "description" : "Applicable only to one-off subscriptions. Payment Gateway Profile id that will be used when billing transactions. tran_currency will be used if profile_id is not provided.If both tran_currency and profile_id is not provided, default USD profile is used"
        },
        "tran_currency" : {
          "type" : "string",
          "example" : "840",
          "description" : "Applicable only to one-off subscriptions. Numeric Currency Code. If Profile_id is provded, the currency is determined from profile. Default is 840 - USD. Refer to <a href=\"/developer/api/reference#currency-codes\"target=\"_blank\">Currency Codes</a> for a list of currency codes. "
        }
      }
    },
    "TransactionResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/TransactionReport"
          }
        }
      }
    },
    "EmbeddedKeyResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "data" : {
          "description" : "If request is successful, this field will contain the response resource. If there are input validation errors i.e, the  code is 2, this field may contain a list of fields that failed the validation.",
          "readOnly" : true,
          "$ref" : "#/definitions/EmbeddedKey"
        }
      }
    },
    "WebhookEventResponse" : {
      "type" : "object",
      "required" : [ "code", "data", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "data" : {
          "description" : "If request is successful, this field will contain the response resource. If there are input validation errors i.e, the  code is 2, this field may contain a list of fields that failed the validation.",
          "readOnly" : true,
          "$ref" : "#/definitions/WebhookEvent"
        }
      }
    },
    "BrowseAppsResult" : {
      "type" : "object",
      "required" : [ "code", "data", "message", "totalPages", "totalRecords" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Response code from API. 0 indicates success. Refer to <a href=\"/developer/api/reference#api-response-codes\"target=\"_blank\">Platform API Response Codes</a> for entire list of return codes.",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the API response code.",
          "readOnly" : true
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Total Number of pages. ",
          "readOnly" : true
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Total number of records. ",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "description" : "An array of the resource object.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/BrowseAppsData"
          }
        }
      }
    },
    "AccountUpdaterSummaryReport" : {
      "type" : "object",
      "properties" : {
        "request_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 112,
          "description" : "Unique ID assigned by Qualpay to the account updater request.",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant.",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "example" : "QUEUED",
          "description" : "Status of the request. The status can be one of the following \n             <ul>\n             <li>QUEUED - Account updater request is queued in the Account updater service</li>\n             <li>COMPLETED - Account updater request has completed</li>\n             </ul>",
          "readOnly" : true,
          "enum" : [ "QUEUED", "COMPLETED" ]
        },
        "cnt_request" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 145,
          "description" : "Number of cards in this request.",
          "readOnly" : true
        },
        "cnt_response" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 145,
          "description" : "Number of cards in this request that were reviewed by the account updater service. (This should match the cnt_request.). The cnt_response field will be zero if the status field is not COMPLETED.",
          "readOnly" : true
        },
        "cnt_update" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 25,
          "description" : "Number of cards in this request that were updated by the account updater service. The cnt_update field will be zero if the status field is not COMPLETED or if there are no updates by the account updater service.",
          "readOnly" : true
        },
        "request_date" : {
          "type" : "string",
          "example" : "2017-05-06",
          "description" : "Account updater request date in YYYY-MM-DD format. Date when a harvest request was sent to the account updater service.",
          "readOnly" : true
        }
      }
    },
    "GatewayResponse" : {
      "type" : "object",
      "properties" : {
        "pg_id" : {
          "type" : "string",
          "example" : "c0a3bead4a5911e6807e0a728c0d49c0",
          "description" : "Qualpay generated Payment gateway ID for the transaction",
          "readOnly" : true
        },
        "rcode" : {
          "type" : "string",
          "example" : "000",
          "description" : "Gateway Response Code. Refer to <a href=\"/developer/api/reference#gateway-response-codes\"target=\"_blank\">Payment Gateway Response Codes</a> for Gateway Response Codes and their description.",
          "readOnly" : true
        },
        "rmsg" : {
          "type" : "string",
          "example" : "Success",
          "description" : "A short description of the Response Code. Refer to <a href=\"/developer/api/reference#gateway-response-codes\"target=\"_blank\">Payment Gateway Response Codes</a> for Gateway Response Codes and their description.",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "example" : "Approved",
          "description" : "Status of Gateway Transaction",
          "readOnly" : true,
          "enum" : [ "Approved", "Declined" ]
        },
        "auth_code" : {
          "type" : "string",
          "example" : "T12345",
          "description" : "Authorization Code from Issuer",
          "readOnly" : true
        },
        "card_number" : {
          "type" : "string",
          "example" : "488888xxxxxx8887",
          "description" : "Masked Card Number used in transaction. ",
          "readOnly" : true
        },
        "tran_time" : {
          "type" : "string",
          "example" : "2016-07-01 00:00:03",
          "description" : "Transaction Time in YYYY-MM-DD HH:MM:ss. All Times are Pacific Time. ",
          "readOnly" : true
        },
        "amt_tran" : {
          "type" : "number",
          "format" : "double",
          "example" : 10.99,
          "description" : "Transaction Amount",
          "readOnly" : true
        },
        "purchase_id" : {
          "type" : "string",
          "example" : "QP12345",
          "description" : "Purchase ID of the transaction",
          "readOnly" : true
        },
        "cvv2_result" : {
          "type" : "string",
          "example" : "M",
          "description" : "If CVV is sent, then the result from the card issuer will be returned in this field. Refer to <a href=\"/developer/api/reference#cvv2-result-codes\"target=\"_blank\">Payment Result Codes for CVV2</a> for valid CVV2 result codes.",
          "readOnly" : true
        },
        "avs_result" : {
          "type" : "string",
          "example" : "Y",
          "description" : "If the billing_zip (and optionally the billing_street_addr1) is sent, then the result from the card issuer will be returned in this field. Refer to <a href=\"/developer/api/reference#avs-result-codes\"target=\"_blank\">Payment Result Codes for AVS</a> for",
          "readOnly" : true
        },
        "duration" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Duration of Gateway request in ms",
          "readOnly" : true
        },
        "http_status" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 200,
          "description" : "HTTP Status of the Payment Gateway Request.",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant",
          "readOnly" : true
        },
        "profile_id" : {
          "type" : "string",
          "example" : "21200000000100000840",
          "description" : "The unique profile ID used in the payment gateway requests",
          "readOnly" : true
        },
        "merch_ref_num" : {
          "type" : "string",
          "example" : "REF#1234",
          "description" : "This field contains a merchant provided reference value that will be stored with the transaction data and will be included with the transaction data reported in the Qualpay Manager. This value will also be attached to any lifecycle transactions (e.g. retrieval requests and chargebacks) that may occur.",
          "readOnly" : true
        },
        "tran_currency" : {
          "type" : "string",
          "example" : "840",
          "description" : "This field contains the ISO numeric currency code for the transaction.  If the profile_id field is provided, this field will be overridden by the profile’s tran_currency.",
          "readOnly" : true
        },
        "dba_name" : {
          "type" : "string",
          "example" : "TEST DBA",
          "description" : "DBA name associated with the profile",
          "readOnly" : true
        },
        "customer_id" : {
          "type" : "string",
          "example" : "JOHNDOE",
          "description" : "Unique ID established by merchant to identify a customer. Customer ID is included in the response if it is sent in the request. ",
          "readOnly" : true
        }
      }
    },
    "BillingCard" : {
      "type" : "object",
      "required" : [ "billing_zip", "card_number" ],
      "properties" : {
        "card_number" : {
          "type" : "string",
          "example" : "4111111111111111",
          "description" : "The payment Card Number - masked if this is part of reponse. When adding payment information, a full card number or card id is required, A masked card number can be used if card_id is also included in the request. Once a card is added, the card number will always remain masked on any subsequent requests returning this field. A card can be added only once,  duplicate cards are not permitted for a customer in the system "
        },
        "exp_date" : {
          "type" : "string",
          "example" : "0420",
          "description" : "Expiry Date in MMYY format."
        },
        "cvv2" : {
          "type" : "string",
          "example" : "123",
          "description" : "The CVV2 or CID value from the credit card. If present during a verify, the cvv will be sent to the issuer for validation. The CVV2 will not be stored in vault. The response will also not include CVV2."
        },
        "card_id" : {
          "type" : "string",
          "description" : "Tokenized Card number. If a card_id is not present in an add request, it is automatically created from the card_number. A card can be added only once. Duplicate cards are not permitted for a customer in the system. "
        },
        "billing_first_name" : {
          "type" : "string",
          "example" : "John",
          "description" : "Billing First Name. Can contain upto 32 characters."
        },
        "billing_last_name" : {
          "type" : "string",
          "example" : "Doe",
          "description" : "Billing Last Name. Can contain upto 32 characters. "
        },
        "billing_addr1" : {
          "type" : "string",
          "example" : "123 Main Avenue",
          "description" : "Billing Street Address. This address will also used for AVS verification if AVS verificaiton is enabled. "
        },
        "billing_city" : {
          "type" : "string",
          "example" : "San Mateo",
          "description" : "Billing City."
        },
        "billing_state" : {
          "type" : "string",
          "example" : "CA",
          "description" : "Billing State."
        },
        "billing_zip" : {
          "type" : "string",
          "example" : "99099",
          "description" : "Billing Zip."
        },
        "billing_country" : {
          "type" : "string",
          "example" : "USA",
          "description" : "Billing Country."
        },
        "card_type" : {
          "type" : "string",
          "example" : "VS",
          "description" : "Card Type. The card type is derived from the card number. Refer to <a href=\"/developer/api/reference#card-types\"target=\"_blank\">Card Types</a> for a list of card types. ",
          "readOnly" : true,
          "enum" : [ "VS", "MC", "AM", "DS" ]
        },
        "verify" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Set this field to true if a card_number or card_id should be verified by the issuer before adding to Customer Vault. When this field is set to true, the customer will be added to vault either if the card verification successful or if card verification is not supported by the issuer.Default value is false and the card will not be verified before adding to vault ",
          "default" : false
        },
        "verified_date" : {
          "type" : "string",
          "example" : "20160530000000",
          "description" : "Verified Date. The date the card was last verified successfully.",
          "readOnly" : true
        },
        "primary" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Set this field to true if this should be the default card. If there are multiple cards with primary true, only one of the card will be choosen to be the default card. Default value is false. ",
          "default" : false
        }
      }
    },
    "CheckoutLink" : {
      "type" : "object",
      "properties" : {
        "checkout_id" : {
          "type" : "string",
          "example" : "a393941797c811e6825102a019999999",
          "description" : "A unique identifier that is generated when a checkout record is created. It should be stored as a reference to the checkout and can be used to pull payment details of the checkout.",
          "readOnly" : true
        },
        "checkout_link" : {
          "type" : "string",
          "example" : "https://app.qualpay.com/checkout/a393941797c811e6825102a019999999",
          "description" : "A redirect link that will direct a customer to the Qualpay payment page. This link is unique for each checkout.",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant",
          "readOnly" : true
        },
        "purchase_id" : {
          "type" : "string",
          "example" : "PID#2345",
          "description" : "The purchase identifier (also referred to as the invoice number) generated by the merchant."
        },
        "amt_tran" : {
          "type" : "number",
          "format" : "double",
          "example" : 4.56,
          "description" : "Transaction amount from the request message",
          "readOnly" : true
        },
        "tran_currency" : {
          "type" : "string",
          "example" : "840",
          "description" : "This field contains the ISO numeric currency code for the transaction.  This field contains the tran_currency from the request or, if profile_id is provided, this field will contain the tran_currency associated with the profile. ",
          "readOnly" : true
        },
        "db_timestamp" : {
          "type" : "string",
          "example" : "2016-02-21T12:57:47.000-0700",
          "description" : "This field contains the request creation time stamp. ",
          "readOnly" : true
        },
        "expiry_time" : {
          "type" : "string",
          "example" : "2016-02-21T14:37:47.000-0700",
          "description" : "This field contains the timestamp when the checkout_link will expire.  A link will expire once the complete payment is made or if the current date is past the expiry time.  Once a link expires, redirects to the link will be forwarded to your failure URL if provided or to the Qualpay Checkout error page if failure URL is not provided. ",
          "readOnly" : true
        }
      }
    },
    "ShippingAddress" : {
      "type" : "object",
      "required" : [ "shipping_first_name", "shipping_last_name" ],
      "properties" : {
        "shipping_first_name" : {
          "type" : "string",
          "example" : "John",
          "description" : "Shipping First Name. Can contain upto 32 characters. "
        },
        "shipping_last_name" : {
          "type" : "string",
          "example" : "Doe",
          "description" : "Shipping Last Name. Can contain upto 32 characters."
        },
        "shipping_addr1" : {
          "type" : "string",
          "example" : "123 Main Street",
          "description" : "Shipping Address line Item 1"
        },
        "shipping_addr2" : {
          "type" : "string",
          "example" : "#1234",
          "description" : "Shipping Address line Item 2"
        },
        "shipping_city" : {
          "type" : "string",
          "example" : "San Mateo",
          "description" : "Shipping City"
        },
        "shipping_state" : {
          "type" : "string",
          "example" : "CA",
          "description" : "Shipping State"
        },
        "shipping_country" : {
          "type" : "string",
          "example" : "USA",
          "description" : "Shipping Country"
        },
        "shipping_zip" : {
          "type" : "string",
          "example" : "99999",
          "description" : "Shipping Zip"
        },
        "primary" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Set this field to true if this should be the default address. If there are multiple addresses with primary true, only one of the card will be choosen to be the defaul address. Default value is false. ",
          "default" : false
        }
      }
    },
    "BatchReport" : {
      "type" : "object",
      "required" : [ "amt_purch", "amt_return", "amt_total", "batch_date", "batch_id", "batch_number", "cnt_purch", "cnt_return", "cnt_total", "merchant_id", "tran_currency" ],
      "properties" : {
        "batch_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Unique ID assigned by Qualpay to this batch.",
          "readOnly" : true
        },
        "merchant_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 212000000001,
          "description" : "Unique ID assigned by Qualpay to a Merchant.",
          "readOnly" : true
        },
        "tran_currency" : {
          "type" : "string",
          "example" : "840",
          "description" : "The ISO 4217 numeric currency code of the batch.",
          "readOnly" : true
        },
        "batch_number" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "A non-unique ID assigned by the merchant's terminal, POS device, or gateway for this batch, in the range of 1 - 999.",
          "readOnly" : true
        },
        "batch_date" : {
          "type" : "string",
          "example" : "2016-07-01",
          "description" : "The date the batch was settled to Qualpay.",
          "readOnly" : true
        },
        "amt_total" : {
          "type" : "string",
          "example" : "1.00",
          "description" : "The total, or net amount of the batch, in the batches currency.",
          "readOnly" : true
        },
        "cnt_total" : {
          "type" : "string",
          "example" : "10",
          "description" : "The count of transactions in the batch, including purchases and credits.",
          "readOnly" : true
        },
        "amt_purch" : {
          "type" : "string",
          "example" : "1.00",
          "description" : "The amount of purchases within the batch, in the batches currency.",
          "readOnly" : true
        },
        "cnt_purch" : {
          "type" : "string",
          "example" : "10",
          "description" : "The count of purchases in the batch.",
          "readOnly" : true
        },
        "amt_return" : {
          "type" : "string",
          "example" : "1.00",
          "description" : "The amount of returns, or credits back to the customer, in the batches currency.",
          "readOnly" : true
        },
        "cnt_return" : {
          "type" : "string",
          "example" : "10",
          "description" : "The count of returns or credits back to the customer in the batch.",
          "readOnly" : true
        }
      }
    },
    "CheckoutRequest" : {
      "type" : "object",
      "required" : [ "amt_tran" ],
      "properties" : {
        "amt_tran" : {
          "type" : "number",
          "format" : "double",
          "example" : 4.56,
          "description" : "The total amount of the transaction including sales tax (if applicable)."
        },
        "tran_currency" : {
          "type" : "string",
          "example" : "840",
          "description" : "The ISO numeric currency code for the transaction.  If the profile_id field is provided, this field will be overridden by the profile’s currency."
        },
        "purchase_id" : {
          "type" : "string",
          "example" : "PID#2345",
          "description" : "The purchase identifier (also referred to as the invoice number) generated by the merchant."
        },
        "profile_id" : {
          "type" : "string",
          "example" : "21200000000100000840",
          "description" : "The unique profile ID to be used in payment gateway requests. Specify this field if there are multiple profiles for the same currency or if the request should be processed using specific profile_id. By default, if provided, the profile_id derives the tran_currency field.  When profile_id is used, the tran_currency is not required."
        },
        "merch_ref_num" : {
          "type" : "string",
          "example" : "REF#1234",
          "description" : "Merchant provided reference value that will be stored with the transaction data and will be included with the transaction data reported in the Qualpay Manager. This value will also be attached to any lifecycle transactions (e.g. retrieval requests and chargebacks) that may occur."
        },
        "customer_first_name" : {
          "type" : "string",
          "example" : "John",
          "description" : "The customer first name. If this field value is longer than the maximum allowed length, the name will be truncated to maximum allowed length."
        },
        "customer_last_name" : {
          "type" : "string",
          "example" : "Doe",
          "description" : "The customer last name. If this field value is longer than the maximum allowed length, the name will be truncated to maximum allowed length."
        },
        "customer_email" : {
          "type" : "string",
          "example" : "jdoe@qualpay.com",
          "description" : "The email address of the customer."
        },
        "customer_phone" : {
          "type" : "string",
          "example" : "999-999-9999",
          "description" : "The customer phone number."
        },
        "billing_addr1" : {
          "type" : "string",
          "example" : "123 Main Street",
          "description" : "The billing street address of the cardholder."
        },
        "billing_state" : {
          "type" : "string",
          "example" : "CA",
          "description" : "The billing state of the cardholder."
        },
        "billing_city" : {
          "type" : "string",
          "example" : "San Mateo",
          "description" : "The billing city of the cardholder."
        },
        "billing_zip" : {
          "type" : "string",
          "example" : "94538",
          "description" : "The billing zip code of the cardholder."
        },
        "preferences" : {
          "description" : "Overrides the preferences set through Qualpay Manager Checkout settings.",
          "$ref" : "#/definitions/CheckoutPreferences"
        }
      }
    },
    "Webhook" : {
      "type" : "object",
      "required" : [ "label", "notification_url" ],
      "properties" : {
        "webhook_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 123,
          "description" : "A unique ID generated by Qualpay to identify a webhook",
          "readOnly" : true
        },
        "webhook_node" : {
          "type" : "string",
          "example" : "<Merchant id or node>",
          "description" : "The node at which the webhook will be created. If a merchant id is sent in this field, the webhook is created for the merchant. If a webhook_node is not included in the request, the webhook will be created at the api key's node. "
        },
        "status" : {
          "type" : "string",
          "example" : "ACTIVE",
          "description" : " Status of the webhook. Following are descriptions of the statuses\n             <ul>\n             <li>ACTIVE - The webhook is active.</li>\n             <li>DISABLED - The webhook was disabled by the user. </li>\n             <li>SUSPENDED - The webhook was suspended by the system. A webhook is suspended when the system is unable to post a request for 48 hours. </li>\n             </ul>While a webhook is disabled or suspended, no new requests will be posted or added for it. If there are existing requests for this webhook in the request queue, they will be held.",
          "readOnly" : true,
          "enum" : [ "ACTIVE", "DISABLED", "SUSPENDED" ]
        },
        "label" : {
          "type" : "string",
          "example" : "Test",
          "description" : "A label to identify the webhook"
        },
        "notification_url" : {
          "type" : "string",
          "example" : "https://<domain>/<>",
          "description" : "The webhook endpoint to which requests will be posted. The endpoint must use HTTPs and should serve HTTP POST requests. The endpoint URL should respond with an HTTP 2xx response.  Any other HTTP response message is considered a failure and Qualpay will retry posting the same request until a successful response is received or the request expires, whichever comes first.\n"
        },
        "email_address" : {
          "type" : "array",
          "description" : "An array of email addresses that will be notified when a webhook is suspended.",
          "items" : {
            "type" : "string"
          }
        },
        "events" : {
          "type" : "array",
          "description" : "An array of events that will trigger the POST request. Refer to Webhooks documentation for a list of available events.",
          "items" : {
            "type" : "string"
          }
        },
        "db_timestamp" : {
          "type" : "string",
          "example" : "2017-06-06 07:30:30",
          "description" : "Webhook creation timestamp in YYYY-MM-DD HH:mm:ss format",
          "readOnly" : true
        },
        "secret" : {
          "type" : "string",
          "description" : "A secret that will be used by Qualpay to generate the x-qualpay-webhook-signature header. Qualpay signs each webhook request using the x-qualpay-webhook-signature header. This signature can be used to validate that a request is initiated by Qualpay.  The signature is a Base 64 encoded HMAC-256 digest generated from the request payload using the webhook’s secret.This secret can be viewed only when adding a webhook. Use Qualpay manager to change the secret. ",
          "readOnly" : true
        }
      }
    }
  }
}
